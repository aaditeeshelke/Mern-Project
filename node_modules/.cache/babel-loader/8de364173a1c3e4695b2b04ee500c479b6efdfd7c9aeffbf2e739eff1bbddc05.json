{"ast":null,"code":"var _jsxFileName = \"C:\\\\ppp\\\\mern-auth 2\\\\frontend1\\\\src\\\\components\\\\Wishlist.js\",\n  _s = $RefreshSig$();\n/*import React, { useEffect, useState } from 'react';\r\nimport './wishlist.css';\r\n\r\nconst Wishlist = () => {\r\n  const [wishlist, setWishlist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Retrieve favorites from local storage\r\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n\r\n    // Group books by name and count duplicates\r\n    const groupedWishlist = favorites.reduce((acc, book) => {\r\n      const existingBookIndex = acc.findIndex(item => item.bookName === book.bookName);\r\n      if (existingBookIndex !== -1) {\r\n        // Book with the same name already exists, increment count\r\n        acc[existingBookIndex].count++;\r\n      } else {\r\n        // Book doesn't exist in the list, add it with a count of 1\r\n        acc.push({ ...book, count: 1 });\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    setWishlist(groupedWishlist);\r\n  }, []);\r\n\r\n  const removeFromWishlist = (bookName) => {\r\n    const updatedWishlist = wishlist.map(book => {\r\n      if (book.bookName === bookName) {\r\n        book.count--;\r\n      }\r\n      return book;\r\n    }).filter(book => book.count > 0);\r\n\r\n    setWishlist(updatedWishlist);\r\n\r\n    // Update localStorage to remove the deleted book\r\n    const updatedLocalStorage = JSON.parse(localStorage.getItem('favorites')).filter(book => book.bookName !== bookName || book.count > 1);\r\n    localStorage.setItem('favorites', JSON.stringify(updatedLocalStorage));\r\n  };\r\n\r\n  const handleBuyNow = async (book) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/auth/books/purchase/${book._id}`, {\r\n        method: 'POST'\r\n      });\r\n      if (response.ok) {\r\n        // Update the local state and local storage to reflect the purchase\r\n        const updatedWishlist = wishlist.map(wishlistBook => {\r\n          if (wishlistBook._id === book._id) {\r\n            wishlistBook.count--;\r\n          }\r\n          return wishlistBook;\r\n        }).filter(wishlistBook => wishlistBook.count > 0);\r\n\r\n        setWishlist(updatedWishlist);\r\n\r\n        const updatedLocalStorage = JSON.parse(localStorage.getItem('favorites')).filter(localStorageBook => localStorageBook._id !== book._id || book.count > 1);\r\n\r\n        localStorage.setItem('favorites', JSON.stringify(updatedLocalStorage));\r\n\r\n        alert(`Book purchased: ${book.bookName}`);\r\n      } else {\r\n        console.error('Failed to purchase book');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to purchase book:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-indigo-600\">Wishlist</h2>\r\n      {wishlist.length === 0 ? (\r\n        <p>No items in your wishlist.</p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n          {wishlist.map((book, index) => (\r\n            <div \r\n              key={index} \r\n              className=\"bg-white shadow-lg rounded-lg p-4 flex flex-col items-center h-full transition-transform transform hover:scale-105 hover:shadow-2xl\"\r\n            >\r\n              <img \r\n                src={book.bookImgUrl} \r\n                alt={book.bookName} \r\n                className=\"h-40 w-full object-contain mb-4 rounded\"\r\n              />\r\n              <div className=\"flex-grow flex flex-col justify-between w-full\">\r\n                <div className=\"text-center\">\r\n                  <h4 className=\"font-semibold text-lg mb-2 text-indigo-700\">{book.bookName}</h4>\r\n                  <p className=\"text-gray-600 mb-1\">{book.authorName}</p>\r\n                  <p className=\"text-gray-600 mb-1\">Count: {book.count}</p>\r\n                </div>\r\n                <div className=\"flex justify-between mt-4 w-full\">\r\n                  <button \r\n                    onClick={() => removeFromWishlist(book.bookName)} \r\n                    className=\"bg-red-500 text-white w-full py-1 rounded hover:bg-red-700 transition duration-300\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button \r\n                    onClick={() => handleBuyNow(book)} \r\n                    className=\"bg-green-500 text-white w-full py-1 rounded hover:bg-green-700 transition duration-300 ml-1\"\r\n                  >\r\n                    Buy Now\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;*/\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wishlist = () => {\n  _s();\n  const [wishlist, setWishlist] = useState([]);\n  useEffect(() => {\n    const storedWishlist = JSON.parse(localStorage.getItem('favorites')) || [];\n    setWishlist(storedWishlist);\n  }, []);\n  const handleRemoveFromWishlist = book => {\n    const updatedWishlist = wishlist.filter(item => item._id !== book._id);\n    setWishlist(updatedWishlist);\n    localStorage.setItem('favorites', JSON.stringify(updatedWishlist));\n  };\n  const handleBuyNow = async book => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/auth/books/purchase/${book._id}`, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        alert(`Book purchased: ${book.bookName}`);\n        handleRemoveFromWishlist(book); // Remove from wishlist after purchase\n      } else {\n        console.error('Failed to purchase book');\n      }\n    } catch (error) {\n      console.error('Failed to purchase book:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-indigo-600\",\n      children: \"My Wishlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\",\n      children: wishlist.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-lg rounded-lg p-4 flex flex-col items-center h-full transition-transform transform hover:scale-105 hover:shadow-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: book.bookImgUrl,\n          alt: book.bookName,\n          className: \"h-40 w-full object-contain mb-4 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow flex flex-col justify-between w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold text-lg mb-2 text-indigo-700\",\n              children: book.bookName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 mb-1\",\n              children: book.authorName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 mb-1\",\n              children: new Date(book.publishingDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 mb-1\",\n              children: [\"No. of Copies: \", book.noOfCopies]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between mt-4 w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBuyNow(book),\n              className: \"bg-green-500 text-white w-1/2 py-1 rounded hover:bg-green-700 transition duration-300 mr-1\",\n              children: \"Buy Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveFromWishlist(book),\n              className: \"bg-red-500 text-white w-1/2 py-1 rounded hover:bg-red-700 transition duration-300 ml-1\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, book._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(Wishlist, \"gAEaL3jXJCWhBzbNqcuCWyZw68k=\");\n_c = Wishlist;\nexport default Wishlist;\nvar _c;\n$RefreshReg$(_c, \"Wishlist\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Wishlist","_s","wishlist","setWishlist","storedWishlist","JSON","parse","localStorage","getItem","handleRemoveFromWishlist","book","updatedWishlist","filter","item","_id","setItem","stringify","handleBuyNow","response","fetch","method","ok","alert","bookName","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","bookImgUrl","alt","authorName","Date","publishingDate","toLocaleDateString","noOfCopies","onClick","_c","$RefreshReg$"],"sources":["C:/ppp/mern-auth 2/frontend1/src/components/Wishlist.js"],"sourcesContent":["/*import React, { useEffect, useState } from 'react';\r\nimport './wishlist.css';\r\n\r\nconst Wishlist = () => {\r\n  const [wishlist, setWishlist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Retrieve favorites from local storage\r\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n\r\n    // Group books by name and count duplicates\r\n    const groupedWishlist = favorites.reduce((acc, book) => {\r\n      const existingBookIndex = acc.findIndex(item => item.bookName === book.bookName);\r\n      if (existingBookIndex !== -1) {\r\n        // Book with the same name already exists, increment count\r\n        acc[existingBookIndex].count++;\r\n      } else {\r\n        // Book doesn't exist in the list, add it with a count of 1\r\n        acc.push({ ...book, count: 1 });\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    setWishlist(groupedWishlist);\r\n  }, []);\r\n\r\n  const removeFromWishlist = (bookName) => {\r\n    const updatedWishlist = wishlist.map(book => {\r\n      if (book.bookName === bookName) {\r\n        book.count--;\r\n      }\r\n      return book;\r\n    }).filter(book => book.count > 0);\r\n\r\n    setWishlist(updatedWishlist);\r\n\r\n    // Update localStorage to remove the deleted book\r\n    const updatedLocalStorage = JSON.parse(localStorage.getItem('favorites')).filter(book => book.bookName !== bookName || book.count > 1);\r\n    localStorage.setItem('favorites', JSON.stringify(updatedLocalStorage));\r\n  };\r\n\r\n  const handleBuyNow = async (book) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/auth/books/purchase/${book._id}`, {\r\n        method: 'POST'\r\n      });\r\n      if (response.ok) {\r\n        // Update the local state and local storage to reflect the purchase\r\n        const updatedWishlist = wishlist.map(wishlistBook => {\r\n          if (wishlistBook._id === book._id) {\r\n            wishlistBook.count--;\r\n          }\r\n          return wishlistBook;\r\n        }).filter(wishlistBook => wishlistBook.count > 0);\r\n\r\n        setWishlist(updatedWishlist);\r\n\r\n        const updatedLocalStorage = JSON.parse(localStorage.getItem('favorites')).filter(localStorageBook => localStorageBook._id !== book._id || book.count > 1);\r\n\r\n        localStorage.setItem('favorites', JSON.stringify(updatedLocalStorage));\r\n\r\n        alert(`Book purchased: ${book.bookName}`);\r\n      } else {\r\n        console.error('Failed to purchase book');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to purchase book:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-indigo-600\">Wishlist</h2>\r\n      {wishlist.length === 0 ? (\r\n        <p>No items in your wishlist.</p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n          {wishlist.map((book, index) => (\r\n            <div \r\n              key={index} \r\n              className=\"bg-white shadow-lg rounded-lg p-4 flex flex-col items-center h-full transition-transform transform hover:scale-105 hover:shadow-2xl\"\r\n            >\r\n              <img \r\n                src={book.bookImgUrl} \r\n                alt={book.bookName} \r\n                className=\"h-40 w-full object-contain mb-4 rounded\"\r\n              />\r\n              <div className=\"flex-grow flex flex-col justify-between w-full\">\r\n                <div className=\"text-center\">\r\n                  <h4 className=\"font-semibold text-lg mb-2 text-indigo-700\">{book.bookName}</h4>\r\n                  <p className=\"text-gray-600 mb-1\">{book.authorName}</p>\r\n                  <p className=\"text-gray-600 mb-1\">Count: {book.count}</p>\r\n                </div>\r\n                <div className=\"flex justify-between mt-4 w-full\">\r\n                  <button \r\n                    onClick={() => removeFromWishlist(book.bookName)} \r\n                    className=\"bg-red-500 text-white w-full py-1 rounded hover:bg-red-700 transition duration-300\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button \r\n                    onClick={() => handleBuyNow(book)} \r\n                    className=\"bg-green-500 text-white w-full py-1 rounded hover:bg-green-700 transition duration-300 ml-1\"\r\n                  >\r\n                    Buy Now\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;*/\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Wishlist = () => {\r\n  const [wishlist, setWishlist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const storedWishlist = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    setWishlist(storedWishlist);\r\n  }, []);\r\n\r\n  const handleRemoveFromWishlist = (book) => {\r\n    const updatedWishlist = wishlist.filter(item => item._id !== book._id);\r\n    setWishlist(updatedWishlist);\r\n    localStorage.setItem('favorites', JSON.stringify(updatedWishlist));\r\n  };\r\n\r\n  const handleBuyNow = async (book) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/auth/books/purchase/${book._id}`, {\r\n        method: 'POST'\r\n      });\r\n      if (response.ok) {\r\n        alert(`Book purchased: ${book.bookName}`);\r\n        handleRemoveFromWishlist(book); // Remove from wishlist after purchase\r\n      } else {\r\n        console.error('Failed to purchase book');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to purchase book:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-indigo-600\">My Wishlist</h2>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n        {wishlist.map((book) => (\r\n          <div\r\n            key={book._id}\r\n            className=\"bg-white shadow-lg rounded-lg p-4 flex flex-col items-center h-full transition-transform transform hover:scale-105 hover:shadow-2xl\"\r\n          >\r\n            <img\r\n              src={book.bookImgUrl}\r\n              alt={book.bookName}\r\n              className=\"h-40 w-full object-contain mb-4 rounded\"\r\n            />\r\n            <div className=\"flex-grow flex flex-col justify-between w-full\">\r\n              <div className=\"text-center\">\r\n                <h4 className=\"font-semibold text-lg mb-2 text-indigo-700\">{book.bookName}</h4>\r\n                <p className=\"text-gray-600 mb-1\">{book.authorName}</p>\r\n                <p className=\"text-gray-600 mb-1\">{new Date(book.publishingDate).toLocaleDateString()}</p>\r\n                <p className=\"text-gray-600 mb-1\">No. of Copies: {book.noOfCopies}</p>\r\n              </div>\r\n              <div className=\"flex justify-between mt-4 w-full\">\r\n                <button\r\n                  onClick={() => handleBuyNow(book)}\r\n                  className=\"bg-green-500 text-white w-1/2 py-1 rounded hover:bg-green-700 transition duration-300 mr-1\"\r\n                >\r\n                  Buy Now\r\n                </button>\r\n                <button\r\n                  onClick={() => handleRemoveFromWishlist(book)}\r\n                  className=\"bg-red-500 text-white w-1/2 py-1 rounded hover:bg-red-700 transition duration-300 ml-1\"\r\n                >\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n\r\n"],"mappingsnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMQ,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC1EL,WAAW,CAACC,cAAc,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,wBAAwB,GAAIC,IAAI,IAAK;IACzC,MAAMC,eAAe,GAAGT,QAAQ,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKJ,IAAI,CAACI,GAAG,CAAC;IACtEX,WAAW,CAACQ,eAAe,CAAC;IAC5BJ,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEV,IAAI,CAACW,SAAS,CAACL,eAAe,CAAC,CAAC;EACpE,CAAC;EAED,MAAMM,YAAY,GAAG,MAAOP,IAAI,IAAK;IACnC,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiDT,IAAI,CAACI,GAAG,EAAE,EAAE;QACxFM,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACfC,KAAK,CAAC,mBAAmBZ,IAAI,CAACa,QAAQ,EAAE,CAAC;QACzCd,wBAAwB,CAACC,IAAI,CAAC,CAAC,CAAC;MAClC,CAAC,MAAM;QACLc,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC5B,OAAA;MAAI2B,SAAS,EAAC,yCAAyC;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxEhC,OAAA;MAAK2B,SAAS,EAAC,qEAAqE;MAAAC,QAAA,EACjFzB,QAAQ,CAAC8B,GAAG,CAAEtB,IAAI,iBACjBX,OAAA;QAEE2B,SAAS,EAAC,qIAAqI;QAAAC,QAAA,gBAE/I5B,OAAA;UACEkC,GAAG,EAAEvB,IAAI,CAACwB,UAAW;UACrBC,GAAG,EAAEzB,IAAI,CAACa,QAAS;UACnBG,SAAS,EAAC;QAAyC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACFhC,OAAA;UAAK2B,SAAS,EAAC,gDAAgD;UAAAC,QAAA,gBAC7D5B,OAAA;YAAK2B,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B5B,OAAA;cAAI2B,SAAS,EAAC,4CAA4C;cAAAC,QAAA,EAAEjB,IAAI,CAACa;YAAQ;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/EhC,OAAA;cAAG2B,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAAEjB,IAAI,CAAC0B;YAAU;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvDhC,OAAA;cAAG2B,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAAE,IAAIU,IAAI,CAAC3B,IAAI,CAAC4B,cAAc,CAAC,CAACC,kBAAkB,CAAC;YAAC;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1FhC,OAAA;cAAG2B,SAAS,EAAC,oBAAoB;cAAAC,QAAA,GAAC,iBAAe,EAACjB,IAAI,CAAC8B,UAAU;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnE,CAAC,eACNhC,OAAA;YAAK2B,SAAS,EAAC,kCAAkC;YAAAC,QAAA,gBAC/C5B,OAAA;cACE0C,OAAO,EAAEA,CAAA,KAAMxB,YAAY,CAACP,IAAI,CAAE;cAClCgB,SAAS,EAAC,4FAA4F;cAAAC,QAAA,EACvG;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACThC,OAAA;cACE0C,OAAO,EAAEA,CAAA,KAAMhC,wBAAwB,CAACC,IAAI,CAAE;cAC9CgB,SAAS,EAAC,wFAAwF;cAAAC,QAAA,EACnG;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GA7BDrB,IAAI,CAACI,GAAG;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA8BV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAvEID,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AAyEd,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}